#!/bin/bash

#EXP leveling system, designed/written/maintained by: Will Russell (Scotchman0)
Version=v:0.1
#Release date: 6/15/21

#define what is needed by the program:

exp_tracker() {
#for i in ./my_exp_test
echo "EXP:"
awk '{s+=$1} END {printf "%.0f", s}' ~/.exp_gen/my_exp
echo ""
}

level_tracker() {
#this will check a running log file for ongoing totals to evaluate level score
echo "Level:"
cat ~/github/exp_gen/my_level
}

level_difficulty() {
#tracks what level you are on and therefore evaluates what EXP gain is needed until next level
echo "level_difficulty" #placeholder
}

level_up() {
# When you hit a level cap and level_tracker rolls over, echo random line from "level_up.txt" +
# provide n value of break reward
echo "level_up!" #placeholder
#shuf command shuffles random reward line
shuf -n 1 ~/github/exp_gen/level_up.txt
awk '{s+=$1} END {printf "%.0f", s}' ~/.exp_gen/my_exp

}

timer() {
# provides basic timer functionality (sleep/wait) n minutes and then adds defined 'e' exp gain
echo "timer" #placeholder
}

time_loop() {
#provides basic timer functionality (sleep/wait) n minutes and then adds defined 'e' exp gain
# runs until manually stopped (no break while loop).
echo "time_loop" #placeholder
}


exp_gain() {
# the basic building block of EXP_GEN, captures user defined 'e' value and applies it to logged exp value.

echo "$e" >> ~/.exp_gen/my_exp
}


first_run_setup(){
# checks to see if version grepped from exp is same as latest in git folder, if not copies latest to ~/bin/
# checks to see if ~/.exp_gen/ exists, if not, creates it + copies in all reference files
echo "placeholder setup script"
mkdir ~/.exp_gen
touch ~/.exp_gen/exp_gen.conf
echo "Version=$Version" > ~/.exp_gen/exp_gen.conf
}

uninstall () {
# confirms user wants to uninstall/delete all exp + level data then purges files:
# removes ~/.exp_gen/ recursively, clearing all install files
# removes copy of 'exp' from ~/bin
echo "uninstall completed"
exit 0
}

reset_all() {
	echo "clearing levels and exp gain"
	> ~/.exp_gen/my_level
	> ~/.exp_gen/my_exp
}

########################BEGIN SCRIPT######################################

#CHECK FOR SETUP files (only relevant on first run ever)
FILENAME=~/.exp_gen/exp_gen.conf
if [ ! -f "$FILENAME" ]; then
   first_run_setup
fi


#basic launch block to get this off the ground and help me start improving it:
while test $# -gt 0; do
	case $1 in
		help|h|-h)
			echo "experience generator (exp_gen) help:"
			echo "------------"
			echo "basic command structure: $ exp [options] [e]"
			echo "e = experience to gain (applicable with add|time|timeloop|log|logloop"
			echo "------------"
			echo "options:"
			echo ""
			echo "status   ------- prints current exp ammount and current level"
			echo "add (e)  ------- adds (e) ammount of exp immediately"
			echo "example: exp add 5"
			echo "time (e) ------- waits for specified time (in minutes) then adds (e)"
			echo "example: exp time 5 ... 'how long to wait? n=?' 15"
			echo ""

			echo "reading the instructions! Love to see it, have some EXP:"
			e=2
			exp_gain
			echo "earned '$e' exp!"
			echo "check how much you have with: $ exp status"
			break
			;;
		add|-a) #example: exp add 5
		shift #this drops the word 'add', capturing only the value of 'e' that follows
	      if test $# -gt 0; then
			e="$@"
			exp_gain
			echo "earned '$e' exp!"
			fi
			break
			;;
		status) # example: exp level (outputs current tracking, shows nice graphical trace)
			echo "your current exp and level are:"
			exp_tracker
			level_tracker
			break
			;;
		reset_progress) #REMOVE ME
			reset_all
			break
			;;
		*)
			echo "try exp help for list of commands"
			break

	esac
done

